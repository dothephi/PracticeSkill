// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Model.Data;
using Model.Enum;
using Model.Models;
using System;
using System.Collections.Generic;

namespace Model.Data;

public partial class PracticeSkillContext : DbContext
{
    public PracticeSkillContext(DbContextOptions<PracticeSkillContext> options) : base(options){}

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<SystemUserAccount> SystemUserAccounts { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        // Role entity
        modelBuilder.Entity<Role>(entity =>
        {
            // Dùng enum AccountRoles làm khóa chính
            entity.HasKey(e => e.Id).HasName("PK_Role");

            entity.ToTable("Role");

            // Map enum sang int trong DB
            entity.Property(e => e.Id)
                .HasConversion<int>()
                .IsRequired();

            entity.Property(e => e.RoleName)
                .IsRequired()
                .HasMaxLength(100);
        });

        // SystemUserAccount entity
        modelBuilder.Entity<SystemUserAccount>(entity =>
        {
            entity.HasKey(e => e.AccountId).HasName("PK_SystemUserAccount");

            entity.ToTable("SystemUserAccount");

            entity.Property(e => e.Address).HasMaxLength(255);
            entity.Property(e => e.Birthday).HasColumnType("date");

            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255);

            // Map enum AccountStatus sang int
            entity.Property(e => e.IsActive)
                .HasConversion<int>() // Enum -> int
                .HasDefaultValue(AccountStatus.Active); // Đặt default bằng enum, không phải số

            entity.Property(e => e.PasswordHash)
                .IsRequired()
                .HasMaxLength(255);

            entity.Property(e => e.PhoneNumber).HasMaxLength(20);

            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(100);

            // Map enum AccountRoles sang int
            entity.Property(e => e.RoleId)
                .HasConversion<int>()
                .IsRequired();

            entity.HasOne(d => d.Role)
                .WithMany(p => p.SystemUserAccounts)
                .HasForeignKey(d => d.RoleId)
                .HasPrincipalKey(r => r.Id) // PK bên Role là enum
                .HasConstraintName("FK_SystemUserAccount_Role");

            entity.Property(e => e.Token)
                .HasMaxLength(500);

            entity.Property(e => e.TokenExpires)
                .HasColumnType("datetime");

            entity.Property(e => e.RefreshToken)
                .HasMaxLength(500);

            entity.Property(e => e.RefreshTokenExpires)
                .HasColumnType("datetime");

            entity.Property(e => e.IsEmailVerified)
                .HasDefaultValue(false);

            entity.Property(e => e.EmailVerificationToken)
                .HasMaxLength(500);

            entity.Property(e => e.EmailVerificationTokenExpires)
                .HasColumnType("datetime");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}